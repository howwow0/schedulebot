package com.howwow.schedulebot.telegram.commands.service;

import com.howwow.schedulebot.exception.ValidationException;
import com.howwow.schedulebot.telegram.commands.BotCommands;
import com.howwow.schedulebot.chat.dto.request.UpdateDeliveryTimeChatSettingsRequest;
import com.howwow.schedulebot.chat.dto.response.UpdatedDeliveryTimeResponse;
import com.howwow.schedulebot.exception.NotFoundException;
import com.howwow.schedulebot.chat.service.ChatSettingsService;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Chat;
import org.telegram.telegrambots.meta.api.objects.User;
import org.telegram.telegrambots.meta.bots.AbsSender;

import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

@Component
public class UpdateDeliveryTimeCommand extends ServiceCommand {

    private final ChatSettingsService chatSettingsService;

    public UpdateDeliveryTimeCommand(ChatSettingsService chatSettingsService) {
        super(BotCommands.UP_DELIVERY_TIME.toString(), "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ‚è∞");
        this.chatSettingsService = chatSettingsService;
    }

    @Override
    protected void execute(AbsSender absSender, User user, Integer messageThreadId, Chat chat, String[] strings) {
        if(strings.length < 1) {
            String errorText =
                    """
                    ‚ùå *–û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω–æ –≤—Ä–µ–º—è*
                    
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú.
                    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
                    */%s 09:30*
                    """.formatted(BotCommands.UP_DELIVERY_TIME);
            sendAnswer(absSender, chat.getId(), messageThreadId,
                    this.getCommandIdentifier(), errorText);
            return;
        }

        try {
            LocalTime deliveryTime = LocalTime.parse(strings[0], DateTimeFormatter.ofPattern("HH:mm"));

                UpdatedDeliveryTimeResponse updatedDeliveryTimeResponse = chatSettingsService.
                  updateDeliveryTime(new UpdateDeliveryTimeChatSettingsRequest(chat.getId(), deliveryTime));

            String successText =
                    """
                    üïí *–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ!*
                    
                    –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ %s.
                    –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.
                    """.formatted(updatedDeliveryTimeResponse.deliveryTime().toString());

            sendAnswer(absSender, chat.getId(), messageThreadId,
                    this.getCommandIdentifier(), successText);

        }
        catch (NotFoundException e) {
            String errorText =
                    """
                    ‚ö†Ô∏è *–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!*
                    
                    –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ:
                    1. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É */%s*
                    2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                    """.formatted(BotCommands.START);

            sendAnswer(absSender, chat.getId(), messageThreadId,
                    this.getCommandIdentifier(), errorText);
        } catch (DateTimeParseException e) {
            String errorText =
                    """
                    ‚ö†Ô∏è *–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!*
                    
                    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ß–ß:–ú–ú (24-—á–∞—Å–æ–≤–æ–π).
                    –ü—Ä–∏–º–µ—Ä: */%s 15:30*
                    """.formatted(BotCommands.UP_DELIVERY_TIME);

            sendAnswer(absSender, chat.getId(), messageThreadId,
                    this.getCommandIdentifier(), errorText);
        } catch (ValidationException e) {
            throw new RuntimeException(e);
        }
    }
}
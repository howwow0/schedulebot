package com.howwow.schedulebot.schedule.service.lesson.utils;

import com.howwow.schedulebot.model.entity.GroupType;
import com.howwow.schedulebot.model.entity.Lesson;
import com.howwow.schedulebot.telegram.utils.MarkdownV2Escaper;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.stream.Collectors;

@Component
@Slf4j
public class LessonFormatterImpl implements LessonFormatter {
    private static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern("HH:mm");

    @Override
    public String format(List<Lesson> lessons) {
        log.info("–ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {} –∑–∞–Ω—è—Ç–∏–π", lessons == null ? 0 : lessons.size());

        if (lessons == null || lessons.isEmpty()) {
            log.info("–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç.");
            return "üìÖ *–°–µ–≥–æ–¥–Ω—è –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç*";
        }

        String result = "üìÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π:*" + "\n\n" +
                lessons.stream()
                        .map(this::formatLesson)
                        .collect(Collectors.joining("\n\n"));

        log.info("–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.");
        return result;
    }

    private String formatLesson(Lesson lesson) {
        String groupInfo = lesson.getGroupType() == GroupType.BOTH
                ? ""
                : "\n   üë• " + MarkdownV2Escaper.escape(GroupType.toString(lesson.getGroupType()));

        String formattedLesson = String.format(
                """
                üéØ *%d –ø–∞—Ä–∞ \\(%s \\- %s\\)\\:*
                   üìö %s
                   üë®‚Äçüè´ %s
                   üö™ –ê—É–¥–∏—Ç–æ—Ä–∏—è %s%s""",
                lesson.getNumberLesson(),
                MarkdownV2Escaper.escape(lesson.getStartTime().format(TIME_FORMATTER)),
                MarkdownV2Escaper.escape(lesson.getEndTime().format(TIME_FORMATTER)),
                MarkdownV2Escaper.escape(lesson.getDiscipline()),
                MarkdownV2Escaper.escape(lesson.getProfessor()),
                MarkdownV2Escaper.escape(lesson.getRoom()),
                groupInfo
        );

        log.debug("–û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–Ω—è—Ç–∏–µ: {}", formattedLesson);
        return formattedLesson;
    }
}

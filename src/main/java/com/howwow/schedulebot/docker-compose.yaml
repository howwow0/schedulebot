services:
  schedulebot:
    image: schedulebot:latest
    env_file:
      - .env
    build:
      context: ../../../../../..
      args:
        DOCKER_BUILDKIT: 1
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network

volumes:
  postgres_data:

networks:
  network:
    driver: bridge